import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data_file = input("Data Object Filename: ")
file_type = input("Tally (t) or Histogram (h) Data? ")
if file_type == 't':
    energy_df = pd.read_csv(data_file,names=['Energy'])
    energies = energy_df ['Energy']
    energies.hist(bins = 50)
    E_hist, bin_edges = np.histogram(energies,bins=50)
    bins = bin_edges[:len(bin_edges)]/1000
elif file_type == 'h':
    min_ang = input("Minimum Angle: ")
    max_ang = input("Maximum Angle: ")
    energy_df = pd.read_csv(data_file, names=['Angle','Energy','Rx Label','Value'],header=1)
    bins = energy_df ['Energy'] [(energy_df['Angle'] < float(max_ang)) & (energy_df["Angle"]>float(min_ang))]
    bins = bins.to_numpy()
    bins = np.append([bins[0]-0.1],bins)
    bins = np.append(bins, bins[-1]+0.1)
    E_hist = energy_df ['Value'] [(energy_df['Angle'] < float(max_ang)) & (energy_df["Angle"]>float(min_ang))]
    E_hist = E_hist.to_numpy()
    E_hist = np.append([0.0],E_hist)
    E_hist = np.append(E_hist,0.0)
E_hist = E_hist/(E_hist.max())

file_name = input("File Name? ")
if len(file_name) < 4:
    raise ValueError('File name must be specified')

Output_GPS = open('%s' % file_name,'x')
Output_GPS.write("#################################################################\n")
Output_GPS.write("# Thin Target GPS source written from output of dtTest code\n")
Output_GPS.write("# Generated by: Arthur Zangi\n")
Output_GPS.write("##################################################################\n")
Output_GPS.write("#\n")
particle_type = input("Particle Type? Options are 'neutron' or 'gamma' ")
Output_GPS.write("/gps/particle   %s\n" % particle_type)
Output_GPS.write("#\n")



beam_type = input("Wide Beam or Pencil Beam: ('wide' or 'pencil') ")
if beam_type == 'wide':
    Output_GPS.write("/gps/pos/type Beam \n/gps/ang/type beam2d \n/gps/ang/rot1 0 0 1 \n/gps/ang/rot2 1 0 0 \n/gps/ang/sigma_x 2 deg \n/gps/ang/sigma_y 2 deg")
    Output_GPS.write("\n#\n")
else:
    Output_GPS.write("/gps/pos/type Point\n")
    Output_GPS.write("/gps/pos/centre 0 0 0 cm\n")
    Output_GPS.write("/gps/direction 0. 0. -1.\n")
    Output_GPS.write("#\n")

Output_GPS.write("/gps/ene/type Arb\n")
Output_GPS.write("/gps/hist/type arb\n")
Output_GPS.write("#              E (MeV) Relative Intensity\n")


for i in range(len(E_hist)):
    Output_GPS.write("/gps/hist/point    {} {}".format(str(round(bins[i],5)),str(round(E_hist[i],5))))
    Output_GPS.write('\n')
Output_GPS.write('#\n')
Output_GPS.write("/gps/hist/inter Spline")
plt.title("Neutron Energy in Detector")
plt.xlabel("Neutron Energy (keV)")
plt.ylabel("Counts")
plt.show()

print("GPS source written to %s successfully!" % file_name)
